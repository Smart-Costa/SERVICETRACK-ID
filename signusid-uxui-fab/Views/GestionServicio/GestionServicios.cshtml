@using AspnetCoreMvcFull.Models.Mensajes
@{
    ViewData["Title"] = "Control de Tráfico";
}

<link href="~/css/controTrafico.css" rel="stylesheet" />

<div class="card" style="padding: 1rem 1rem 1rem 1rem;">
    <!-- Form GET sólo para búsqueda (puede ir al inicio de la vista) -->
    <form id="frmSearch" method="get" action="@Url.Action("GestionServicios")"></form>


    <form id="frmGestionServicios" asp-controller="GestionServicio" asp-action="GuardarGestion" method="post">
        <input type="hidden" id="EstadoFormulario" name="EstadoFormulario" value="Insertar" />
        <input type="hidden" name="ticket" value="" />
        <!-- Header alineado -->
        <div class="row align-items-center g-2 mb-3">
            <!-- Izquierda: título -->
            <div class="col-12 col-md-auto">
                <h4 class="mb-0" style="color:#606060">Gestión de Servicios</h4>
            </div>

            <!-- Derecha: checks -->
            <div class="col-12 col-md">
                <div id="channelGroup"
                     class="channel-checks d-flex flex-wrap gap-3 justify-content-md-end justify-content-center">

                    <button type="button" id="SinAsignar" name="SinAsignar" class="status-btn">SIN ASIGNAR</button>
                    <button type="button" id="SLATiempo" name="SLATiempo" class="status-btn">SLA: A TIEMPO</button>

                </div>
                <!-- error de canales -->
                <div id="canalesError" class="field-error"></div>
            </div>
            <style>
                .status-btn {
                    background-color: #38c2cf; /* mismo celeste de tu imagen */
                    color: white;
                    font-weight: 600;
                    border: none;
                    border-radius: 6px;
                    padding: 8px 18px;
                    cursor: default; /* como son de estado, no de acción */
                    font-size: 0.9rem;
                }

                    .status-btn:hover {
                        opacity: 0.9;
                    }
            </style>
        </div>



        <!-- Grid -->
        <div class="traffic-grid">
            <!-- Fila 1 -->
            <div class="row gx-3 gy-3 align-items-start">


                <!-- Empresa -->
                <div class="col-12 col-md-4">
                    <div class="field-wrap">
                        <label class="form-label" style="color:#606060">Empresa*</label>
                        <select name="EmpresaId" id="selectEmpresa" class="form-select select-light">
                            <option value="" disabled>Seleccione un elemento</option>
                            @foreach (var opt in (IEnumerable<SelectListItem>)ViewBag.Empresas)
                            {
                                <option value="@opt.Value" selected="@(opt.Selected ? "selected" : null)">@opt.Text</option>
                            }
                        </select>


                        <div id="empresaError" class="field-error"></div>
                    </div>

                </div>


                <!-- Contrato (NO requerido) -->
                <div class="col-12 col-md-4">
                    <div class="field-wrap">
                        <label style="color:#606060" class="form-label">Contrato Número</label>
                        <select name="ContratoId" id="selectContrato" class="form-select select-light">
                            <option value="">Sin contrato</option>
                            @foreach (var opt in (IEnumerable<SelectListItem>)ViewBag.Contratos)
                            {
                                <option value="@opt.Value" selected="@(opt.Selected ? "selected" : null)">@opt.Text</option>
                            }
                        </select>

                        <div id="contratoError" class="field-error"></div>
                    </div>
                </div>

                <!-- Buscador -->
                <div class="col-12 col-md-4">
                    <div class="field-wrap">
                        <label style="visibility:hidden">Buscar</label>
                        <div class="row g-2 align-items-end">
                            <div class="col">
                                <input form="frmSearch" type="text" name="q" class="traffic-input"
                                       placeholder="Buscar" value="" /> @* @(Model?.Query ?? "") *@
                                <input form="frmSearch" type="hidden" name="page" value="1" />
                                <input form="frmSearch" type="hidden" name="pageSize" value="" /> @* @Model.PageSize *@
                            </div>
                            <div class="col-auto">
                                <button form="frmSearch" type="submit" class="btn-primary-ux" style="min-width:120px">Buscar</button>
                            </div>
                        </div>
                        <!-- 🔽 placeholder para mantener altura igual que las demás -->
                        <div class="field-error">&nbsp;</div>
                    </div>
                </div>
            </div>


            <!-- Fila 2 -->
            <div class="row gx-3 gy-3">

                <!-- Solicitante -->
                <div class="col-12 col-md-4">
                    <div class="field-wrap">
                        <label style="color:#606060" class="form-label">Solicitante*</label>
                        <select name="SolicitanteId" id="selectSolicitante" class="form-select select-light">
                            <option value="">Seleccione un elemento</option>
                            @foreach (var opt in (IEnumerable<SelectListItem>)ViewBag.Solicitantes)
                            {
                                <option value="@opt.Value" selected="@(opt.Selected ? "selected" : null)">@opt.Text</option>
                            }
                        </select>

                        <div id="solicitanteError" class="field-error"></div>
                    </div>
                </div>

                <!-- Tel + Email -->
                <!-- Solicitante -->
                <div class="col-12 col-md-4">
                    <div class="field-wrap">
                        <label style="color:#606060" class="form-label">Estado del Incidente*</label>
                        <select id="selectEstadoActivo" name="Estado" class="form-select select-light">
                            <option value="">Seleccione un elemento</option>
                            @foreach (var opt in (IEnumerable<SelectListItem>)ViewBag.Estados)
                            {
                                <option value="@opt.Value" selected="@(opt.Selected ? "selected" : null)">@opt.Text</option>
                            }
                        </select>

                        <div id="selectEstadoActivoError" class="text-danger" style="font-size: 0.85em;"></div>
                    </div>
                </div>


                <!-- Asignado -->
                <div class="col-12 col-md-4">
                    <div class="field-wrap">
                        <label class="form-label" style="color:#606060">Asignar Incidente a:</label>
                        <select name="AsignadoAId" id="selectAsignado" class="form-select select-light">
                            <option value="" selected disabled>Seleccione un elemento</option>
                            @foreach (var opt in (IEnumerable<SelectListItem>)ViewBag.Asignados)
                            {
                                <option value="@opt.Value" selected="@(opt.Selected ? "selected" : null)">@opt.Text</option>
                            }
                        </select>

                        <div id="asignadoError" class="field-error"></div>
                    </div>

                </div>
            </div>

            <!-- Fila 3 -->
            <div class="row gx-3 gy-3">
                <!-- Razón de Servicios (md-4) -->
                <div class="col-12 col-md-4">
                    <div class="field-wrap">
                        <label style="color:#606060" class="form-label">Razón de Servicios*</label>
                        <select name="RazonServicioId" id="selectRazonServicio" class="form-select select-light">
                            <option value="" selected disabled>Seleccione un elemento</option>
                            @foreach (var opt in (IEnumerable<SelectListItem>)ViewBag.RazonesServicio)
                            {
                                <option value="@opt.Value" selected="@(opt.Selected ? "selected" : null)">@opt.Text</option>
                            }
                        </select>

                        <div id="razonError"></div>
                    </div>


                </div>


                <!-- Lugar de Servicio (md-2) -->
                <div class="col-12 col-md-2">
                    <div class="field-wrap">
                        <label class="form-label" style="color:#606060">Lugar de Servicio*</label>

                        <div class="inline-checks inline-eq">
                            <label class="radio-square">
                                <input type="radio" name="LugarServicio" value="0" checked>
                                <span>Remoto</span>
                            </label>

                            <label class="radio-square">
                                <input type="radio" name="LugarServicio" value="1">
                                <span>Presencial</span>
                            </label>
                        </div>
                        <div id="lugarServicioError"></div>

                    </div>

                </div>


                <!-- Dirección para el Servicio (md-6) -->
                <div class="col-12 col-md-6">
                    <div class="field-wrap">
                        <label style="color:#606060" class="form-label">Dirección para el Servicio</label>
                        <textarea name="DireccionServicio" id="DireccionServicio" class="traffic-textarea"></textarea>
                        <div id="direccionError"></div>
                    </div>


                </div>
            </div>


            <!-- Fila 4 (todo alineado como la segunda imagen) -->
            <div class="row gx-3 gy-3">
                <!-- Columna izquierda: Fecha + Hora (apilados) -->
                <div class="col-12 col-md-4">

                    <!-- Fecha Próximo Servicio --> <!-- FechaProximoServicio -->
                    <div class="field-wrap">
                        <label class="form-label" style="color:#606060">Fecha Estimada para Cierre</label>
                        <div class="d-flex align-items-center gap-2">
                            <input type="text"
                                   class="traffic-input"
                                   id="FechaCierre"
                                   name="FechaCierre"
                                   placeholder="mm/dd/yy"
                                   readonly />

                            <button class="btn btn-outline-orange d-inline-flex align-items-center justify-content-center"
                                    type="button" id="btnCalendarioServicio"
                                    style="min-width:52px; height:44px; padding:0 12px; border-radius:12px;">
                                <img src="@Url.Content("~/img/calendario_icono.svg")" alt="Calendario" width="20" height="20" />
                            </button>
                        </div>
                        <div id="fechaError" class="field-error"></div>
                    </div>

                </div>

                <!-- Columna derecha: Descripción -->
                <div class="col-12 col-md-8">
                    <div class="field-wrap">
                        <label class="form-label" style="color:#606060">Descripción de Incidente</label>
                        <textarea name="DescripcionIncidente" id="DescripcionIncidente" class="traffic-textarea" style="min-height: 130px;"></textarea>
                        <div id="descripcionError" class="field-error"></div>
                    </div>
                </div>
            </div>

            <!-- Fila de botones (solo botones centrados) -->
            <div class="row g-3 mt-3">
                <div class="col-12 d-flex justify-content-center">
                    <div class="d-flex justify-content-center gap-3">
                        <button type="submit" class="btn-primary-ux btn-ux-sm">Guardar</button>
                        <button type="button" id="btnBorrar" class="btn-secondary-ux btn-ux-sm">Borrar</button>
                    </div>
                </div>
            </div>
        </div>
    </form>


    <style>
        /* Cabecera: título a la izq, canales a la der */
        .traffic-head2 {
            position: relative;
            display: flex;
            align-items: center;
            justify-content: space-between;
        }

        .channel-checks {
            display: flex;
            gap: 16px;
            align-items: center;
            flex-wrap: wrap;
        }

        /* Solo texto de error (sin iconos ni bordes) */
        .error-text {
            position: static;
        }

        /* Mensaje de error de canales: fijo arriba a la derecha,
                                                                                                     no mueve el grupo de checkboxes */
        .field-wrap {
            display: flex;
            flex-direction: column;
        }

        .field-error {
            position: static;
            margin-top: 4px;
            font-size: 12px;
            line-height: 1.2;
            color: #e53935;
            min-height: 16px; /* reserva alto aunque esté vacío */
        }

        /* Para el header de canales, unifícalo a .field-error para reservar alto */
        #canalesError {
            text-align: right; /* en desktop queda alineado a la derecha */
        }

        /* (Opcional) si quieres que Tel/Email no desacomode nada */
        .tel-email {
            display: flex;
            gap: 12px;
        }

        .field-half {
            flex: 1;
            display: flex;
            flex-direction: column;
        }

        /* Solo encabezados */
        .table thead th {
            white-space: normal !important; /* permite salto de línea */
            overflow: visible !important;
            text-overflow: clip !important;
            overflow-wrap: anywhere; /* rompe palabras largas si hace falta */
        }
    </style>

    <script>
        // --- helpers ---
        function clearSelectKeepFirst(selectEl) {
          while (selectEl.options.length > 1) selectEl.remove(1);
        }
        function appendOption(selectEl, value, text) {
          // evita duplicados por value
          for (let i = 0; i < selectEl.options.length; i++) {
            if (selectEl.options[i].value === String(value)) return;
          }
          const opt = new Option(text, value);
          selectEl.add(opt);
        }
        async function loadSelect(selectId, url, keepFirst = true, selectedValue = null) {
          const sel = document.getElementById(selectId);
          if (!sel) return;
          if (keepFirst) clearSelectKeepFirst(sel); else sel.innerHTML = "";
          try {
            const res = await fetch(url, { headers: { 'Accept':'application/json' } });
            const data = await res.json();
            data.forEach(item => appendOption(sel, item.id, item.text));
            if (selectedValue) sel.value = selectedValue;
          } catch (e) {
            console.error('Error cargando', selectId, e);
          }
          return true;
        }

        // Si estás en modo edición, puedes rellenar esto desde el servidor:
        // window.initialValues = { empresaId:'...', contratoId:'...', solicitanteId:'...', estadoId:'...', asignadoId:'...', razonId:'...' };

        document.addEventListener('DOMContentLoaded', async () => {
          const selEmpresa = document.getElementById('selectEmpresa');
          const selContrato = document.getElementById('selectContrato');
          const selSolic   = document.getElementById('selectSolicitante');
          const selEstado  = document.getElementById('selectEstadoActivo');
          const selAsign   = document.getElementById('selectAsignado');
          const selRazon   = document.getElementById('selectRazonServicio');

          const iv = window.initialValues || {};

          // Cargas paralelas (no dependientes)
          const pEstados = loadSelect('selectEstadoActivo', '@Url.Content("~/GestionServicio/EstadosOptions")', true, iv.estadoId);
          const pAsign   = loadSelect('selectAsignado',     '@Url.Content("~/GestionServicio/UsuariosOptions")', true, iv.asignadoId);
          const pRazones = loadSelect('selectRazonServicio','@Url.Content("~/GestionServicio/RazonesOptions")', true, iv.razonId);
          const pEmpresas= loadSelect('selectEmpresa',      '@Url.Content("~/GestionServicio/EmpresasOptions")', true, iv.empresaId);

          // Cuando empresas termine, carga contratos y solicitantes dependientes
          await pEmpresas;

          // Si vienes editando y ya tienes empresaId, precarga dependientes
          if (iv.empresaId) {
            await loadSelect('selectContrato',
              '@Url.Content("~/GestionServicio/ContratosOptions")' + '?empresaId=' + encodeURIComponent(iv.empresaId),
              true, iv.contratoId);

            await loadSelect('selectSolicitante',
              '@Url.Content("~/GestionServicio/SolicitantesOptions")' + '?empresaId=' + encodeURIComponent(iv.empresaId),
              true, iv.solicitanteId);
          }

          // Cambio de empresa => refrescar contratos + solicitantes
          selEmpresa?.addEventListener('change', async () => {
            const emp = selEmpresa.value || '';
            await loadSelect('selectContrato',
              '@Url.Content("~/GestionServicio/ContratosOptions")' + '?empresaId=' + encodeURIComponent(emp),
              true, null);

            await loadSelect('selectSolicitante',
              '@Url.Content("~/GestionServicio/SolicitantesOptions")' + '?empresaId=' + encodeURIComponent(emp),
              true, null);
          });
        });
    </script>


    <script>
        $(document).ready(function () {
            // Cargar estados desde el servidor
            $.getJSON('@Url.Content("~/Administration/ObtenerEstadoActivoSignus")', function (data) {
                data.forEach(function (item) {
                    $('#selectEstadoActivo').append(
                        $('<option>', {
                            value: item.id,
                            text: item.nombre,
                            'data-descripcion': item.descripcion
                        })
                    );
                });
            });

            // Mostrar descripción cuando se cambia el estado
            $('#selectEstadoActivo').on('change', function () {
                var descripcion = $('option:selected', this).data('descripcion') || '';
                $('#descripcionEstado').val(descripcion);
            });
        });
    </script>

    <script>
        // document.addEventListener("DOMContentLoaded", function () {
        //     fetch('@Url.Content("~/GestionServicio/ObtenerEmpresasService")')
        //         .then(response => response.json())
        //         .then(data => {
        //             const select = document.getElementById('selectEmpresa');
        //             data.forEach(item => {
        //                 const option = document.createElement('option');
        //                 option.value = item.id;
        //                 option.textContent = item.texto;
        //                 select.appendChild(option);
        //             });
        //         });
        // });
    </script>
    <script>
        // document.addEventListener("DOMContentLoaded", function () {
        //     const selectA = document.getElementById('selectEmpresa');
        //     const selectB = document.getElementById('selectContrato');

        //     selectA.addEventListener('change', function () {
        //         const companyId = this.value;

        //         // Reset y deshabilita el select B
        //         selectB.innerHTML = '<option value="">Seleccione un elemento</option>';
        //         //selectB.disabled = true;

        //         if (companyId) {
        //             fetch(`@Url.Content("~/GestionServicio/ObtenerContratosServices")?idCompany=${companyId}`)
        //                 .then(response => response.json())
        //                 .then(data => {
        //                     data.forEach(item => {
        //                         const option = document.createElement('option');
        //                         option.value = item.id;
        //                         option.textContent = item.texto;
        //                         selectB.appendChild(option);
        //                     });
        //                     //selectB.disabled = false;
        //                 });
        //         }
        //     });
        // });
    </script>

    <script>
        // async function cargarContratosService(ubicacionA, ubicacionB) {
        //     const selectA = document.getElementById('selectEmpresa');
        //     const selectB = document.getElementById('selectContrato');


        //     // Asignar A y cargar B
        //     selectA.value = ubicacionA;
        //     await fetch(`@Url.Content("~/GestionServicio/ObtenerContratosServices")?idCompany=${ubicacionA}`)
        //         .then(response => response.json())
        //         .then(data => {
        //             selectB.innerHTML = '<option value="">Seleccione un elemento</option>';
        //             data.forEach(item => {
        //                 const option = document.createElement('option');
        //                 option.value = item.id;
        //                 option.textContent = item.texto;
        //                 selectB.appendChild(option);
        //             });
        //             selectB.value = ubicacionB;
        //         });



        // }
    </script>


    <br />
    @model AspnetCoreMvcFull.Models.GestionServicios.ControlTraficoTablaViewModel


    <style>

        .select-light {
            background-color: #eeeeee;
        }
    </style>

    <form asp-controller="GestionServicio" asp-action="GestionServicios" method="get">
        <div class="card-datatable table-responsive border" style="padding: .5rem;">
            <style>
                .card-datatable {
                    border: 1px solid #dee2e6;
                    border-radius: 8px;
                    overflow: hidden;
                    background: #fff
                }

                    .card-datatable table {
                        border-bottom: 1px solid #dee2e6
                    }
                /* ancho y centrado del checkbox */
                .w-5 {
                    width: 5%
                }

                .w-10 {
                    width: 10%
                }

                .w-20 {
                    width: 20%
                }

                .w-35 {
                    width: 35%
                }

                .w-50 {
                    width: 50%
                }

                .text-center {
                    text-align: center
                }

                table th,
                table td {
                    white-space: nowrap; /* No permite saltos de línea dentro de la celda */
                    overflow: visible !important;
                    text-overflow: unset !important;
                    max-width: none !important; /* Evita que se limite el ancho */
                }

                .table-responsive {
                    overflow-x: auto;
                }
            </style>
            <div class="table-responsive table-scroll">
                <table class="datatables-basic table table-stretch">
                    <thead>
                        <tr>
                            <th>Contrato Número</th>
                            <th>Requerimiento</th>
                            <th>Fecha</th>
                            <th>Asignado a:</th>
                            <th>N° ticket</th>
                            <th>Fecha para cierre</th>
                            <th>Estado</th>
                            <th class="text-end">Acciones</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            var registros = Model?.Registros ?? new List<AspnetCoreMvcFull.Models.GestionServicios.ControlTraficoListItem>();
                        }
                        @if (registros.Any())
                        {
                            foreach (var item in registros)
                            {
                                <tr>
                                    <td style="font-size:12.5px" class="text-truncate">
                                        @(item.ContratoNumero ?? "Sin contrato")
                                    </td>
                                    <td style="font-size:12.5px" class="d-none d-sm-table-cell text-truncate">
                                        @(item.RazonServicioNombre ?? "—")
                                    </td>
                                    <td style="font-size:12.5px" class="d-none d-md-table-cell text-truncate">
                                        @((item.FechaCreacionUtc?.ToString("MM/dd/yyyy")) ?? "—")   @* Formato EE.UU. *@
                                    </td>
                                    <td style="font-size:12.5px" class="d-none d-lg-table-cell text-truncate">
                                        @(item.AsignadoAUsername ?? "Sin asignar")
                                    </td>
                                    <td style="font-size:12.5px" class="d-none d-sm-table-cell">
                                        @item.Ticket
                                    </td>
                                    <td style="font-size:12.5px" class="d-none d-md-table-cell text-truncate">
                                        @((item.FechaCierre?.ToString("MM/dd/yyyy")) ?? "—")        @* Formato EE.UU. *@
                                    </td>
                                    <td style="font-size:12.5px" class="text-truncate">
                                        @(item.EstadoIncidenteNombre ?? "—")
                                    </td>
                                    <td class="text-end">
                                        <div class="d-inline-flex gap-2">
                                            <a class="btn btn-edit d-flex align-items-center justify-content-center p-1 px-2"
                                               title="Editar"
                                               data-contrato="@item.ContratoId"
                                               data-ticket="@item.Ticket"
                                               style="background-color:#00A5B8;border:none;border-radius:6px;height:28px;min-width:40px;">
                                                <img src="~/img/editar_icono.svg" alt="Editar" style="width:16px;height:16px;">
                                            </a>
                                            <button type="button" class="btn d-flex align-items-center justify-content-center p-1 px-2"
                                                    title="Borrar"
                                                    data-bs-toggle="modal" data-bs-target="#trafficDeleteModal"
                                                    data-contrato="@item.ContratoId"
                                                    data-ticket="@item.Ticket"
                                                    style="background-color:#666;border:none;border-radius:6px;height:28px;min-width:40px;">
                                                <img src="~/img/eliminar_icono.svg" alt="Eliminar" style="width:16px;height:16px;">
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="8" class="text-center text-muted py-4">Sin resultados.</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>


            @*             @{
                var page = Model.CurrentPage;
                var pageSize = Model.PageSize;
                var total = Model.TotalItems;
                var totalPages = Model.TotalPages;
                var q = Model.Query ?? "";
            }

            <!-- Pie: info + paginación SIEMPRE visible -->
            <div class="d-flex justify-content-end mt-2">
                <nav aria-label="Paginación">
                    <ul class="pagination flex-wrap mb-0">
                        <li class="page-item @(page == 1 ? "disabled" : "")">
                            <a class="page-link" href="@Url.Action("ControlTrafico", new { page = 1, pageSize, q })">««</a>
                        </li>
                        <li class="page-item @(page == 1 ? "disabled" : "")">
                            <a class="page-link" href="@Url.Action("ControlTrafico", new { page = Math.Max(1, page - 1), pageSize, q })">«</a>
                        </li>

                        @for (var i = 1; i <= totalPages; i++)
                        {
                            if (totalPages == 1 || i == 1 || i == totalPages || (i >= page - 2 && i <= page + 2))
                            {
                                <li class="page-item @(i == page ? "active" : "")">
                                    <a class="page-link" href="@Url.Action("ControlTrafico", new { page = i, pageSize, q })">@i</a>
                                </li>
                            }
                            else if (i == page + 3 || i == page - 3)
                            {
                                <li class="page-item disabled"><span class="page-link">…</span></li>
                            }
                        }

                        <li class="page-item @(page >= totalPages ? "disabled" : "")">
                            <a class="page-link" href="@Url.Action("ControlTrafico", new { page = Math.Min(totalPages, page + 1), pageSize, q })">»</a>
                        </li>
                        <li class="page-item @(page >= totalPages ? "disabled" : "")">
                            <a class="page-link" href="@Url.Action("ControlTrafico", new { page = totalPages, pageSize, q })">»»</a>
                        </li>
                    </ul>
                </nav>
            </div> *@
        </div>
    </form>
</div>

<!-- Modal específico Control de Tráfico -->
<div class="modal fade" id="trafficDeleteModal"
     tabindex="-1" aria-labelledby="trafficDeleteLabel" aria-hidden="true"
     data-bs-backdrop="static" data-bs-keyboard="false">
    <div class="modal-dialog">
        <!-- sin modal-dialog-centered -->
        <div class="modal-content" style="border-radius:14px;">
            <div class="modal-header">
                <h5 class="modal-title" id="trafficDeleteLabel">Confirmar eliminación</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
            </div>

            <div class="modal-body">
                <p class="mb-1">¿Seguro que deseas eliminar este registro?</p>
                <small class="text-muted d-block">Contrato: <span id="trafDelContratoText">—</span></small>
                <small class="text-muted d-block">Ticket: <span id="trafDelTicketText">—</span></small>
            </div>

            <div class="modal-footer">
                <form asp-controller="GestionServicio" asp-action="EliminarControlTrafico" method="post" class="d-inline">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="ticket" id="trafDelTicketInput" value="">
                    <button type="submit" id="trafConfirmDeleteBtn" class="btn btn-danger">Eliminar</button>
                </form>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>

            </div>
        </div>
    </div>
</div>



@{
    AlertMessage? alertMessage = null;

    if (TempData["Alert"] is string alertJson)
    {
        try
        {
            alertMessage = System.Text.Json.JsonSerializer.Deserialize<AlertMessage>(alertJson);
            TempData.Remove("Alert");
        }
        catch { alertMessage = null; }
    }
}

@if (alertMessage != null)
{
    var jsonAlert = Json.Serialize(alertMessage); // serializa para usarlo en JS

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var alertData = @Html.Raw(jsonAlert);
            console.log("SCRIPT DE ALERTA ACTIVADO");
            console.log(alertData);

            var deleteModal = document.getElementById('deleteModal');
            var deleteModalLabel = document.getElementById('deleteModalLabel');
            var deleteModalBody = document.getElementById('deleteModalBody');
            var confirmDeleteBtn = document.getElementById('confirmDeleteBtn');
            var modalHeader = deleteModal.querySelector('.modal-header');

            deleteModalLabel.textContent = (alertData.tipo.toLowerCase() === "success") ? "Éxito" : "Error";
            deleteModalBody.innerHTML = alertData.mensaje;

            // Aplicar colores por defecto según tipo
            if (alertData.tipo.toLowerCase() === "success") {
                modalHeader.style.backgroundColor = "transparent";
                deleteModalLabel.style.color = "#606060";
            } else {
                modalHeader.style.backgroundColor = "#FF5100";
                deleteModalLabel.style.color = "white";
            }

            confirmDeleteBtn.classList.add('d-none');

            var modal = new bootstrap.Modal(deleteModal);
            modal.show();

            deleteModal.addEventListener('hidden.bs.modal', function () {
                history.replaceState(null, '', window.location.pathname);
            });
        });
    </script>

}

<!-- Modal de confirmación -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Confirmar eliminación</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="deleteModalBody">
                <!-- Este texto se actualizará dinámicamente -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                <a id="confirmDeleteBtn" class="btn btn-danger d-none" href="#">Borrar</a>
            </div>
        </div>
    </div>
</div>



<script>
    // Función para limpiar duplicados en el select
    // function limpiarDuplicadosSelect(selectId) {
    //   const select = document.getElementById(selectId);
    //   if (!select) return;

    //   const seen = new Set();
    //   [...select.options].forEach(opt => {
    //     if (seen.has(opt.value + "|" + opt.text)) {
    //       opt.remove(); // elimina duplicado
    //     } else {
    //       seen.add(opt.value + "|" + opt.text);
    //     }
    //   });
    // }

    // document.addEventListener("DOMContentLoaded", () => {
    //   const selectContrato = document.getElementById("selectContrato");

    //   if (!selectContrato) return;

    //   // 1. Al cambiar el select
    //   selectContrato.addEventListener("change", () => {
    //     limpiarDuplicadosSelect("selectContrato");
    //   });

    //   // 2. Cada vez que se inserte algo nuevo dentro del select (Mutación del DOM)
    //   const observer = new MutationObserver(() => {
    //     limpiarDuplicadosSelect("selectContrato");
    //   });

    //   observer.observe(selectContrato, { childList: true });
    // });
</script>




<link href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
@* <script src="~/js/control-trafico.js"></script>
 *@

<style>
    /* body {
                                                                            background-color: #FFE2DA;

                                                                        } */


    .btn-orange {
        background-color: #FF5100;
        color: white;
    }

        .btn-orange:hover {
            background-color: #e46b0f;
            color: white;
        }

    .btn-outline-orange {
        background-color: #FF5100;
        color: white;
        border: none;
        transition: background-color 0.2s ease, color 0.2s ease;
    }

        .btn-outline-orange:hover {
            border: 1px solid #FFA45B;
            color: white;
            background-color: #FFA45B;
        }


    .select-light {
        background-color: #eeeeee;
    }

    h4 {
        color: #353535;
    }
</style>

