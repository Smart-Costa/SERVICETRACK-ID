<!-- Add Role Modal:
En este form se el ingreso y edición de roles.
-->
<div class="modal fade" id="addRoleModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-simple modal-dialog-centered modal-add-new-role">
        <div class="modal-content">
            <div class="modal-body">
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                <div class="text-center mb-6">
                    <h4 class="role-title mb-2">Agregar Rol Nuevo</h4>
                </div>
                <!-- Add role form -->
                @model AspnetCoreMvcFull.Models.Roles.RolesViewModel
                <form id="addRoleForm" class="row g-6" asp-action="SaveRole" asp-controller="Access" method="post">
                  <div class="col-12">
                        <label class="form-label" for="RoleName">Nombre del Rol</label>
                        <input type="text"
                               id="RoleName"
                               name="RoleName"
                        class="form-control input2"
                        placeholder="Ingrese el nombre del rol"
                                /><!-- name="ctl00$MainContent$txtAddNombre"-->
                        <div id="roleNameError" class="error-message2"></div>
                    </div>
                    <div class="col-12">
                        <label class="form-label" for="Descripcion">Descripción</label>
                        <textarea id="Descripcion"
                                  name="Descripcion"
                                  class="form-control input2"
                                  placeholder="Ingrese una breve descripción del rol"
                                  rows="4"
                                  ></textarea><!-- name="ctl00$MainContent$txtaddComentario"-->
                        <div id="roleDescriptionError" class="error-message2"></div>
                    </div>
          @*           <div class="col-12">
                        <h5 class="mb-6">Permisos</h5>
                        <!-- Tabla de permisos -->
                        <div class="table-responsive">
                            <table class="table table-flush-spacing">
                                <tbody>
                                    @foreach (var permiso in Model.TodosLosPermisos)
                                    {
                                        <tr>
                                            <td class="text-nowrap fw-medium text-heading">@permiso</td>
                                            <td>
                                                <div class="d-flex justify-content-end">
                                                    <div class="form-check mb-0">
                                                        <!-- Checkbox con el nombre correcto y valor igual al permiso -->
                                                        <input class="form-check-input" type="checkbox" name="PermisosSeleccionados" value="@permiso"
                                                        @(Model.PermisosSeleccionados.Contains(permiso) ? "checked" : "") />

                                                        <label class="form-check-label" for="@permiso"> Activar </label>
                                                    </div>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div> *@






                    <div class="col-12 d-flex justify-content-center gap-3 mt-3">
                        <button type="submit" name="ctl00$MainContent$btnAddrole" class="btn btn-primary button2" id="saveRoleButton">
                            Guardar
                        </button>
                        <button type="button" class="btn btn-secondary button2" id="cancelButton" data-bs-dismiss="modal">
                            Cancelar
                        </button>
                    </div>
                </form>
                <!--/ Add role form -->
            </div>
        </div>
    </div>
</div>
<!-- #region Estilos CSS -->


<script>
    // Función para mostrar mensajes de error en los divs correspondientes
    function showMessage2(message, elementId) {
        const errorElement = document.getElementById(elementId);
        errorElement.textContent = message;
        errorElement.style.color = 'red';
        errorElement.style.fontSize = '12px';
    }

    // Función para la validación de los campos
    function validarFormulario2(event) {
        // Limpia los mensajes de error previos
        document.getElementById("roleNameError").textContent = "";
        document.getElementById("roleDescriptionError").textContent = "";

        let isValid = true;

        // Validación del campo "RoleName"
        const roleName = document.getElementById("RoleName").value;
        if (!roleName.trim()) {
            showMessage2("Campo Rol es obligatorio, por favor ingrese este campo.", "roleNameError");
            isValid = false;
        } else if (!validarLetras(roleName)) {
            showMessage2("El campo Rol permite únicamente letras.", "roleNameError");
            isValid = false;
        } else if (!validarLongitud(roleName, 3)) {
            showMessage2("El campo Rol debe de tener más de 3 caracteres.", "roleNameError");
            isValid = false;
        }

        // Validación del campo "Descripcion"
        const descripcion = document.getElementById("Descripcion").value;
        if (!descripcion.trim()) {
            showMessage2("Campo descripción es obligatorio, por favor ingrese este campo.", "roleDescriptionError");
            isValid = false;
        } else if (!validarCaracteresEspeciales(descripcion)) {
            showMessage2('El campo descripción permite únicamente letras, números y los siguientes caracteres especiales: ", . - ( )', "roleDescriptionError");
            isValid = false;
        } else if (!validarLongitud(descripcion, 3)) {
            showMessage2("El campo descripción debe de tener más de 3 caracteres.", "roleDescriptionError");
            isValid = false;
        }

        // Si algún error fue encontrado, previene el envío del formulario
        if (!isValid) {
            event.preventDefault();
        }
    }

    // Agregar el evento de validación al formulario antes de enviarlo
    document.addEventListener('DOMContentLoaded', function() {
        const form = document.getElementById("addRoleForm");
        if (form) {
            form.addEventListener('submit', validarFormulario2);
        }
    });

     document.addEventListener("DOMContentLoaded", function () {
        const addRoleModal = document.getElementById("addRoleModal");

        if (addRoleModal) {
            addRoleModal.addEventListener("show.bs.modal", function () {
                // Limpiar mensajes de error
                document.getElementById("roleNameError").textContent = "";
                document.getElementById("roleDescriptionError").textContent = "";

                // Limpiar los estilos de error (opcional)
                document.getElementById("roleNameError").style.color = "";
                document.getElementById("roleDescriptionError").style.color = "";

                // También puedes limpiar los valores de los campos si es necesario
                document.getElementById("RoleName").classList.remove("is-invalid");
                document.getElementById("Descripcion").classList.remove("is-invalid");
            });
        }
    });

</script>



<style>
    .error-message2 {
        color: red;
        font-size: 12px;
        margin-top: 5px;
    }

    .input2 {
        margin-bottom: 10px;
    }

    .button2 {
        margin-top: 10px;
    }
</style>

<!-- #endregion -->

<!-- #region Scripts -->




<!--/ Add Role Modal -->
