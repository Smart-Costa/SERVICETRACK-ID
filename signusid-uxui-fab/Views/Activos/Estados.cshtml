@{
    ViewData["Title"] = "Estados";
}

@section VendorStyles {
    <link rel="stylesheet" href="~/vendor/libs/datatables-bs5/datatables.bootstrap5.css">
    <link rel="stylesheet" href="~/vendor/libs/datatables-responsive-bs5/responsive.bootstrap5.css">
    <link rel="stylesheet" href="~/vendor/libs/datatables-buttons-bs5/buttons.bootstrap5.css">
    <link rel="stylesheet" href="~/vendor/libs/&#64;form-validation/form-validation.css" />
}

@section VendorScripts {
    <script src="~/vendor/libs/datatables-bs5/datatables-bootstrap5.js"></script>

    <script src="~/vendor/libs/&#64;form-validation/popular.js"></script>
    <script src="~/vendor/libs/&#64;form-validation/bootstrap5.js"></script>
    <script src="~/vendor/libs/&#64;form-validation/auto-focus.js"></script>
    
}

@section PageScripts {
    <script src="~/js/estados-features.js"></script>
}

@* ************** Content ************** *@


@model AspnetCoreMvcFull.Models.Activos.EstadosViewModel

<div class="card p-3">
    <h4 class="mb-1">Estados de Activos</h4>
    <br />
    <div class="row mb-3">
        <!-- Formulario de búsqueda -->
        <div class="col-md-6">
            <form method="get" action="@Url.Action("Estados", "Activos")" class="d-flex">
                <div class="input-group w-100">
                    <input type="text" name="search" id="searchInput" class="form-control" placeholder="Buscar por nombre o descripción" value="@ViewBag.SearchQuery" />
                    <button type="button" class="btn btn-outline-secondary" id="clearSearch">X</button>
                    <button type="submit" class="btn btn-primary">Buscar</button>
                </div>
            </form>
        </div>

        <!-- Formulario de filtro -->
        <div class="col-md-6">
            <form method="get" action="@Url.Action("Estados")" class="d-flex align-items-center">
                <div class="form-group w-100 me-3">
                    <select id="filterAssets" name="hasAssets" class="form-control">
                        <option value="">-- Todos --</option>
                        <option value="withAssets">Con activos asignados</option>
                        <option value="withoutAssets">Sin activos asignados</option>
                    </select>
                </div>
                <button type="submit" class="btn btn-primary">Filtrar</button>
            </form>
        </div>
    </div>

    <!-- Botón + Nuevo Estado -->
    <button id="buttonAddStates" type="button" data-bs-target="#addStateModal" data-bs-toggle="modal" data-context="new"
            class="btn btn-primary align-self-end"
            style="white-space: nowrap;">
        + Nuevo Estado
    </button>
    <div class="card-datatable table-responsive">
        <!-- Botón de eliminación en batch -->
        <button id="deleteBatchBtn" class="btn btn-sm btn-danger" title="Borrar en batch" disabled data-bs-toggle="modal" data-bs-target="#deleteModal">
            <i class="fas fa-trash"></i>
        </button>
        <table class="datatables-basic table">
            <thead>
                <tr>
                    <th>
                        <input type="checkbox" id="select_all" />
                    </th>
                    <th class="d-none">ID</th>
                    <th>
                        <a style="color: black; text-decoration: none;" href="@Url.Action("Estados", new { sortColumn = "name", sortDirection = ViewBag.SortColumn == "name" && ViewBag.SortDirection == "asc" ? "desc" : "asc", page = Model.CurrentPage, search = ViewBag.SearchQuery })">
                            Nombre @if (ViewBag.SortColumn == "name")
                            {
                                <i class="fas fa-sort-@ViewBag.SortDirection"></i>
                            }
                        </a>
                    </th>
                    <th>
                        <a style="color: black; text-decoration: none;" href="@Url.Action("Estados", new { sortColumn = "description", sortDirection = ViewBag.SortColumn == "description" && ViewBag.SortDirection == "asc" ? "desc" : "asc", page = Model.CurrentPage, search = ViewBag.SearchQuery })">
                            Descripción @if (ViewBag.SortColumn == "description")
                            {
                                <i class="fas fa-sort-@ViewBag.SortDirection"></i>
                            }
                        </a>
                    </th>
                    <th>
                        <a style="color: black; text-decoration: none;" href="@Url.Action("Estados", new { sortColumn = "assignatedAssets", sortDirection = ViewBag.SortColumn == "assignatedAssets" && ViewBag.SortDirection == "asc" ? "desc" : "asc", page = Model.CurrentPage, search = ViewBag.SearchQuery })">
                            Activos @if (ViewBag.SortColumn == "assignatedAssets")
                            {
                                <i class="fas fa-sort-@ViewBag.SortDirection"></i>
                            }
                        </a>
                    </th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var estado in Model.Estados)
                {
                    <tr>
                        <td>
                            <input type="checkbox" class="checkbox-item" data-id="@estado.assetStatusSysId" />
                        </td>
                        <td class="d-none">@estado.assetStatusSysId</td>
                        <td>@estado.name</td>
                        <td>@estado.description</td>
                        <td>@estado.assignatedAssets</td>
                        <td>
                            <a class="btn btn-sm btn-primary btn-edit"
                               title="Editar"
                               data-name="@estado.name"
                               data-description="@estado.description"
                               onclick="setupEditContext(this, '@(estado.name)', '@(estado.description)')"
                               id="edit_btn"
                               @*data-bs-target="#addStateModal"*@
                               data-context="edit">
                                <i class="fas fa-edit text-white"></i>
                            </a>

                            <button class="btn btn-sm btn-danger" title="Borrar"
                                    data-bs-toggle="modal" data-bs-target="#deleteModal"
                                    data-id="@estado.assetStatusSysId"
                                    data-name="@estado.name" data-assets="@estado.assignatedAssets">
                                <i class="fas fa-trash"></i>
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>

    </div>

    <!-- Paginación -->
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-end">
            @if (Model.CurrentPage > 1)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Estados", new { page = Model.CurrentPage - 1, hasAssets = ViewContext.HttpContext.Request.Query["hasAssets"], search = ViewContext.HttpContext.Request.Query["search"] })" aria-label="Previous">
                        <span aria-hidden="true">&laquo;</span>
                    </a>
                </li>
            }

            @for (var i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Estados", new { page = i, hasAssets = ViewContext.HttpContext.Request.Query["hasAssets"], search = ViewContext.HttpContext.Request.Query["search"] })">@i</a>
                </li>
            }

            @if (Model.CurrentPage < Model.TotalPages)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Estados", new { page = Model.CurrentPage + 1, hasAssets = ViewContext.HttpContext.Request.Query["hasAssets"], search = ViewContext.HttpContext.Request.Query["search"] })" aria-label="Next">
                        <span aria-hidden="true">&raquo;</span>
                    </a>
                </li>
            }
        </ul>
    </nav>



</div>



<!-- Modal de confirmación -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Confirmar eliminación</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="deleteModalBody">
                <!-- Este texto se actualizará dinámicamente -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                <a id="confirmDeleteBtn" class="btn btn-danger d-none" href="#">Borrar</a>
            </div>
        </div>
    </div>
</div>

<!-- Modal de advertencia para no editable -->
@*  <div class="modal fade" id="nonEditableModal" tabindex="-1" aria-labelledby="nonEditableModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="nonEditableModalLabel">Edición no permitida</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="nonEditableModalBody">
                <!-- Este texto se actualizará dinámicamente con el nombre del estado -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
            </div>
        </div>
    </div>
</div> *@


<script>
    const fill_selected_state_data = (name, description) => {
      // Actualizar los campos del formulario con los valores seleccionados
      document.getElementById("name").value = name;
      document.getElementById("description").value = description;
    };

    function setupEditContext(element, name, description) {
      const form = document.getElementById("addStateModal");
      form.setAttribute("data-context", "edit"); 
      fill_selected_state_data(name, description);
    
    }

</script>



@await Html.PartialAsync("../_Partials/_Modals/ModalAddState")
